{"version":3,"sources":["utils/index.ts","models/count.ts","store.ts","pages/home/index.tsx","pages/hooks/UseState.tsx","pages/hooks/CustomHooks.tsx","pages/hooks/components/Counter.tsx","pages/hooks/UseEffect.tsx","pages/hooks/UseContext.tsx","pages/hooks/UseMemo.tsx","pages/hooks/UseCallback.tsx","pages/hooks/UseRef.tsx","pages/hooks/UseRematch.tsx","pages/hooks/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["delay","ms","Promise","resolve","setTimeout","dolphins","createModel","state","reducers","increment","effects","dispatch","incrementAsync","store","init","models","HomePageContainer","useSelector","useDispatch","className","onClick","SimpleHooks","useState","name","age","person","setPerson","count","setCount","page","keyword","params","listData","setListData","loading","setLoading","JSON","stringify","type","Search","style","width","placeholder","onSearch","axios","get","then","res","data","length","map","item","key","id","title","CustomHooks","initialUrl","initialParams","list","setList","setParams","isError","setIsError","useEffect","a","async","url","result","fetchData","useList","subjects","Counter","value","onChange","newCount","UseEffect","timer","console","log","clearTimeout","num","CountContext","createContext","Child","useContext","UseContext","Provider","UseMemo","UseCallback","target","setTarget","other","setOther","sum","useMemo","_sum","i","inputChange","useCallback","e","margin","fontSize","MyInput","forwardRef","props","ref","UseRef","inputRef","useRef","myInputRef","timeoutRefId","current","focus","UseRematch","HooksPage","exact","path","component","UseState","SubMenu","Sider","Content","AppHot","locale","zhCN","mode","height","Item","to","padding","from","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.919df64e.chunk.js","sourcesContent":["export const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))","import { createModel } from '@rematch/core'\n\nimport { delay } from '../utils'\n\nexport type DolphinsState = number\n\nexport const dolphins = createModel({\n\tstate: 0,\n\treducers: {\n\t\tincrement: (state: DolphinsState) => state + 1,\n\t},\n\teffects: dispatch => ({\n\t\tasync incrementAsync() {\n\t\t\tawait delay(500)\n\t\t\tdispatch.dolphins.increment()\n\t\t},\n\t}),\n})","import { init, RematchRootState } from '@rematch/core'\nimport * as models from './models'\n\nexport const store = init({\n\tmodels,\n})\n\nexport type Store = typeof store\nexport type Dispatch = typeof store.dispatch\nexport type iRootState = RematchRootState<typeof models>","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { iRootState, Dispatch } from \"../../store\";\n\nconst HomePageContainer: React.FC = () => {\n  const dolphins = useSelector((state: iRootState) => state.dolphins);\n  const dispatch = useDispatch<Dispatch>();\n  return (\n    <div className=\"page-home all_nowarp\">\n      <h1>{dolphins}</h1>\n      <button onClick={dispatch.dolphins.increment}>+1</button>\n    </div>\n  );\n};\n\nexport default HomePageContainer;\n","import React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport axios from \"axios\";\n\ninterface Param {\n  page: number;\n  keyword: string;\n}\n\ninterface ListItem {\n  title: string;\n  id: string;\n}\n\nconst api = \"https://www.caoxingyu.club/guwen/selectbykeyword\";\n\nconst SimpleHooks: React.FC = () => {\n  const [person, setPerson] = useState({ name: \"lucy\", age: 1 });\n\n  // 也可以如下\n  // const [person, setPerson] = useState(() => {\n  // const age = 1\n  //   return { name: \"lucy\", age };\n  // });\n  const [count, setCount] = useState<number>(0);\n\n  function setPersonFun() {\n    // 同setState该方法是异步的\n    setPerson({ name: \"lucy\", age: 2 });\n    //只改变一个属性可以么？\n    // setPerson({ age: 2 })\n    // 如果为对象推荐写为解构覆盖属性的方式\n    // setPerson({ ...person, age: 2 })\n    // 下面这样可以么？\n    // person.age = 2;\n    // console.log(person)\n    // setPerson(person);\n    // 基础类型不需要写，复杂类型需要写\n    // const [arr, setArr] = useState<number[]>([]);\n  }\n\n  // params并不是dom中这里为什么设置成一个对象？\n  const [params] = useState<Param>({\n    page: 1,\n    keyword: \"\"\n  });\n  const [listData, setListData] = useState<ListItem[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  function fetchListData() {\n    setLoading(true);\n    axios.get(api, { params }).then(res => {\n      setListData(res.data.data);\n      setLoading(false);\n    });\n  }\n  // 我想进来就有默认数据怎么办？直接调用search('李白')可以么？需要useEffect\n  function search(name: string) {\n    params.keyword = name;\n    fetchListData();\n  }\n\n  return (\n    <>\n      <h1>person: {JSON.stringify(person)}</h1>\n      <Button type=\"primary\" onClick={setPersonFun}>\n        设置年龄为2\n      </Button>\n      <h1>count: {count}</h1>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setCount(count + 1);\n        }}\n      >\n        增加\n      </Button>\n      <h1>示例古诗词搜索功能</h1>\n      <Input.Search\n        loading={loading}\n        style={{ width: \"300px\" }}\n        placeholder=\"请输入你要搜索的古诗词\"\n        onSearch={search}\n      />\n      {loading ? (\n        <h1>加载中</h1>\n      ) : (\n        <ul>\n          {listData.length > 0 ? (\n            listData.map(item => <li key={item.id}>{item.title}</li>)\n          ) : (\n            <h1>空空如也</h1>\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SimpleHooks;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\n\nfunction useList(initialUrl: string, initialParams: any) {\n  const [list, setList] = useState();\n  const [params, setParams] = useState(initialParams);\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      if (!loading) {\n        return;\n      }\n\n      try {\n        const result = await axios({\n          url: initialUrl,\n          params\n        });\n\n        setList(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [params, initialUrl, loading]);\n\n  return {\n    list,\n    loading,\n    setLoading,\n    isError,\n    setParams\n  };\n}\n\nconst CustomHooks: React.FC = () => {\n  // 逻辑与视图的分离更有利于复用\n  const { list, loading, setLoading } = useList(\n    \"http://douban.uieee.com/v2/movie/new_movies\",\n    {}\n  );\n\n  return (\n    <div>\n      <h1>最近热映电影</h1>\n      <Button loading={loading} onClick={() => setLoading(true)}>\n        刷新\n      </Button>\n      {loading ? (\n        <h1>loading</h1>\n      ) : (\n        <ul>\n          {list &&\n            list.subjects.map((item: any) => {\n              return <li>{item.title}</li>;\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CustomHooks;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\n\ninterface Props {\n  value: number;\n  onChange: (num: number) => any;\n}\n\nexport default function Counter({ value, onChange }: Props) {\n  const [count, setCount] = useState<number>(0);\n\n  useEffect(() => {\n    value && setCount(value);\n  }, [value]);\n\n  return (\n    <>\n      <div>{count}</div>,\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          const newCount = count + 1;\n          setCount(newCount);\n          onChange(newCount);\n        }}\n      >\n        点击+1\n      </Button>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport axios from \"axios\";\nimport Counter from \"./components/Counter\";\n\ninterface ListItem {\n  title: string;\n}\nconst api = \"http://douban.uieee.com/v2/movie/new_movies\";\n\nconst UseEffect: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCount(count + 1);\n    }, 1000); // 如果没有第二个参数会发生什么\n    console.log(\"effect:\", timer);\n    // 每次副作用执行，都会返回一个新的clear函数\n    // clear函数会在下一次副作用逻辑之前执行（DOM渲染完成之后）\n    // 组件销毁也会执行一次\n    return () => {\n      console.log(\"clear:\", timer);\n      clearTimeout(timer);\n    };\n  }, [count]);\n  console.log(\"before render\");\n\n  const [list, setList] = useState<ListItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // DOM渲染完成之后副作用执行\n  useEffect(() => {\n    if (loading) {\n      axios.get(api).then(res => {\n        setList(res.data.subjects);\n        setLoading(false);\n      });\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <h1>{count}</h1>\n      \n      <Counter value={20} onChange={(num: number) => console.log(num)} />\n      \n      <h1>最近热映电影</h1>\n      <Button loading={loading} onClick={() => setLoading(true)}>\n        刷新\n      </Button>\n      {loading ? (\n        <h1>loading</h1>\n      ) : (\n        <ul>\n          {list.map(item => {\n            return <li>{item.title}</li>;\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default UseEffect;\n","import React, { createContext, useContext, useState } from \"react\";\nimport { Button } from \"antd\";\nconst CountContext = createContext(0);\n\nconst UseContext: React.FC = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <h1>UseContext</h1> \n      <Button type=\"primary\" onClick={()=>{setCount(count+1)}}>+1</Button>\n      <CountContext.Provider value={count}>\n        <Child />\n      </CountContext.Provider>\n    </div>\n  );\n};\n\nconst Child: React.FC = () => {\n  const count = useContext(CountContext);\n  return <h2>{count}</h2>;\n};\n\nexport default UseContext;\n","import React from \"react\";\n\nconst UseMemo: React.FC = () => {\n\n  return (\n    <div>\n     UseMemo\n    </div>\n  );\n}\n\nexport default UseMemo;\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport { Button } from \"antd\";\n\n// useCallback返回一个 memoized 回调函数 useMemo返回一个 memoized 值\n// seCallback(fn, deps) 相当于 useMemo(() => fn, deps)\nconst UseCallback: React.FC = () => {\n  const [target, setTarget] = useState(0);\n  const [other, setOther] = useState(0);\n\n  const sum = useMemo(() => {\n    console.log(\"重新计算一次\");\n    let _sum = 0;\n    for (let i = 1; i <= target; i++) {\n      _sum += i;\n    }\n    return _sum;\n  }, [target]);\n\n  const inputChange = useCallback(e => {\n    console.log(e.target.value);\n  }, []);\n\n  return (\n    <div style={{ width: \"200px\", margin: \"auto\" }}>\n      <input type=\"text\" onChange={inputChange} />\n      <p>value:{target}</p>\n      <p>sum:{sum}</p>\n      <Button onClick={() => setTarget(target + 1)}>递增</Button>\n      <Button onClick={() => setTarget(target - 1)}>递减</Button>\n\n      <div style={{ width: \"80px\", margin: \"100px auto\", fontSize: \"20px\" }}>\n        干扰项 {other}\n      </div>\n      <Button onClick={() => setOther(other + 1)}>递增</Button>\n      <Button onClick={() => setOther(other - 1)}>递减</Button>\n    </div>\n  );\n};\n\nexport default UseCallback;\n","import React, { useRef, useState, forwardRef, useEffect } from \"react\";\n\nconst MyInput = forwardRef((props, ref: any) => {\n  return (\n    <div>\n      <h1>这是自定义input组件</h1>\n      <input type=\"text\" ref={ref} {...props} />\n    </div>\n  );\n});\n\nconst UseRef: React.FC = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const myInputRef = useRef<HTMLInputElement>(null);\n  const timeoutRefId = useRef<any>();\n  const [count, setCount] = useState(0);\n\n  const focusTextInput = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const focusMyInput = () => {\n    if (myInputRef.current) {\n      myInputRef.current.focus();\n    }\n  };\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setCount(count + 1);\n    },1000);\n    if (timeoutRefId.current) {\n      timeoutRefId.current = id;\n    }\n    return () => {\n      if (timeoutRefId.current) {\n        clearTimeout(timeoutRefId.current);\n      }\n    };\n  }, [count]);\n\n  return (\n    <>\n      <input type=\"text\" ref={inputRef} />\n      <button onClick={focusTextInput}>获得input焦点</button>\n      <br />\n      <br />\n      <MyInput ref={myInputRef} />\n      <button onClick={focusMyInput}>获得myInput焦点</button>\n      <br />\n      <br />\n      <h1>useRef也可以用作实例变量{count}</h1>\n    </>\n  );\n};\n\nexport default UseRef;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { iRootState, Dispatch } from \"../../store\";\n\nconst UseRematch: React.FC = () => {\n  const dolphins = useSelector((state: iRootState) => state.dolphins);\n  const dispatch = useDispatch<Dispatch>();\n  return (\n    <div className=\"page-home all_nowarp\">\n      <h1>{dolphins}</h1>\n      <button onClick={dispatch.dolphins.increment}>+1</button>\n    </div>\n  );\n};\n\nexport default UseRematch;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport UseState from \"./UseState\";\nimport CustomHooks from \"./CustomHooks\";\nimport UseEffect from \"./UseEffect\";\nimport UseContext from \"./UseContext\";\nimport UseMemo from \"./UseMemo\";\nimport UseCallback from \"./UseCallback\";\nimport UseRef from \"./UseRef\";\nimport UseRematch from \"./UseRematch\";\n\nconst HooksPage: React.FC = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path={`/hooks/`} component={UseState} />\n        <Route exact path={`/hooks/useState`} component={UseState} />\n        <Route exact path={`/hooks/useEffect`} component={UseEffect} />\n        <Route exact path={`/hooks/useContext`} component={UseContext} />\n        <Route exact path={`/hooks/useMemo`} component={UseMemo} />\n        <Route exact path={`/hooks/useCallback`} component={UseCallback} />\n        <Route exact path={`/hooks/useRef`} component={UseRef} />\n        <Route exact path={`/hooks/customHooks`} component={CustomHooks} />\n        <Route exact path={`/hooks/useRematch`} component={UseRematch} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default HooksPage;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\nimport { ConfigProvider, Layout, Menu } from \"antd\";\nimport zhCN from \"antd/lib/locale-provider/zh_CN\";\nimport { hot } from \"react-hot-loader/root\";\nimport { store } from \"./store\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport HooksPage from \"./pages/hooks\";\n\nconst { SubMenu } = Menu;\nconst { Sider, Content } = Layout;\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <ConfigProvider locale={zhCN}>\n        <Router>\n          <Layout>\n            <Sider>\n              <Menu mode=\"inline\" style={{ height: \"100%\" }}>\n                <Menu.Item>\n                  <Link to={`/home`}>\n                    <span>Home</span>\n                  </Link>\n                </Menu.Item>\n                <SubMenu title={<span>hooks</span>}>\n                  <Menu.Item>\n                    <Link to={`/hooks/useState`}>useState</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useEffect`}>useEffect</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useCallback`}>useCallback</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useMemo`}>useMemo</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useContext`}>useContext</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useRef`}>useRef</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/customHooks`}>customHooks</Link>\n                  </Menu.Item>\n                  <Menu.Item>\n                    <Link to={`/hooks/useRematch`}>useRematch</Link>\n                  </Menu.Item>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Layout>\n              <Content style={{ padding: \"20px\" }}>\n                <Switch>\n                  <Redirect exact from=\"/\" to=\"/home\" />\n                  <Route path=\"/home\" component={Home} />\n                  <Route path=\"/hooks\" component={HooksPage} />\n                </Switch>\n              </Content>\n            </Layout>\n          </Layout>\n        </Router>\n      </ConfigProvider>\n    </Provider>\n  );\n};\n\nconst AppHot = process.env.NODE_ENV === \"development\" ? hot(App) : App;\n\nexport default AppHot;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}